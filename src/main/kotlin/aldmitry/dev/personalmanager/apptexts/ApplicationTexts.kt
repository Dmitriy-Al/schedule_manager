package aldmitry.dev.personalmanager.apptexts

// Тексты сообщений/Message's texts
const val text_actAccept = "❗  Данное действие необходимо подтвердить."

const val text_messageToUser = "\uD83D\uDD30  Введите id пользователя и # (пример: 123456789#), затем текст сообщения для пользователя."

const val text_messageToAllUsers = "\uD83D\uDD30  Введите текст сообщения и отправьте его в чат. Текст длинной менее 3х символов не будет отправлен."

const val text_backupDataPartOne = "\uD83D\uDD30  Backup-файл данных с расширением .xml будет создан в директории по умолчанию: "

const val text_backupDataPartTwo = " после нажатия клавиши <Создать>. Если необходимо создать файл в другой директории, необходимо прописать путь к ней (например: C:/) и отправить сообщение в чат."

const val text_getBackupPartOne = "\uD83D\uDD30  Backup для сервера будет получен из директории по умолчанию: "

const val text_getBackupPartTwo = " после нажатия клавиши <Загрузить файл>. Если необходимо загрузить файл из другой директории, необходимо прописать путь к ней (например: C:/) и отправить сообщение в чат."

const val text_warningText = "❗ Внимание, удаление сервера может привести к необратимой потере данных, убедитесь в наличии резервной копии."

const val text_wasDeleted = "\uD83D\uDD30  Данные сервера были удалены "

const val text_uploadToServer = "\uD83D\uDD30  backup серверов (при наличии!) будет выгружен в admin-чат Telegram из директории по умолчанию после нажатия клавиши <По умолчанию>. Также путь к backup " +
        "(например: C:/) можно отправить в чат и выгрузить файлы из указанной директории."

const val text_regAsSpec = "ℹ  В этом разделе вы можете зарегистрироваться как специалист и упростить ведение записи своих клиентов/пациентов."

const val text_inputSecondName = "\uD83D\uDD30 Введите фамилию клиента/пациента или ФИО полностью (например: Иванов Иван Иванович) и отправьте сообщение в чат. При необходимости, имя и отчество можно заменить символом -"

const val text_findClient = "\uD83D\uDD30 Чтобы найти клиента, с данными которого вы хотите работать, " +
        "нажмите клавишу с первой буквой фамилии клиента, или введите первую букву/несколько первых букв фамилии клиента и отправьте сообщение в чат."

const val text_findClientToAppointment = "\uD83D\uDD30 Чтобы найти клиента для записи на приём, нажмите клавишу с первой буквой фамилии, или введите первую букву/несколько первых букв фамилии клиента и отправьте " +
        "сообщение в чат."

const val text_cancelAppointment = "❗ Подтвердите, пожалуйста, отмену записи."

const val text_delClient = "❗ Внимание: клиент/пациент будет безвозвратно удалён из базы данных. Подтвердите, пожалуйста, удаление."

const val text_deletedClient = "\uD83D\uDD30  Все данные клиента были удалены."

const val text_specialistMenu = "\uD83D\uDD30  Раздел пользовательских данных. При необходимости, вы можете изменить свои ФИО, добавить пароль учетной записи, " +
        "чтобы в случае, если ваш аккаунт в Telegram изменится, восстановить доступ к учётной записи с нового аккаунта. Также, вы можете посмотреть собственную запись к специалисту, если вы сами являетесь" +
        "клиентом/пациентом специалиста."

const val text_messageToAdmin = "\uD83D\uDD30  Если вы столкнулись с проблемами в процессе использования приложения, опишите вашу проблему и отправьте сообщение в чат."

const val text_repairAccount = "\uD83D\uDD30  Введите пароль от вашей учётной записи и отправьте сообщение в чат."

const val text_inputName = "\uD83D\uDD30  Введите вашу фамилию или ФИО полностью (например: Иванов Иван Иванович) и отправьте сообщение в чат."

const val text_deletedAllUseData = "\uD83D\uDD30  Все данные пользователя были удалены."

const val text_inputClientName = "\uD83D\uDD30 Введите фамилию клиента/пациента или ФИО полностью (например: Иванов Иван Иванович) и отправьте сообщение в чат. При необходимости, имя и отчество можно заменить символом -"

const val text_fromAdminMessage = "ℹ  Сообщение от администратора:"

const val text_fromAdminMessageNotSend = "ℹ  Сообщение от администратора не было отправлено."

const val text_forStartMessage = "\uD83D\uDD30  Сообщение для StartMessage: "

const val text_support = "<Обращение в техническую поддержку>\nОт пользователя: "

const val text_forSupportSent = "Сообщение было отправлено в чат поддержки."

const val text_nameTooLong = "ℹ  Превышена максимальная длина имени. Для корректной работы приложения необходимо сократить количество символов в ФИО."

const val text_inputPatronymic = "\uD83D\uDD30  Введите отчество и отправьте сообщение в чат. Если ввод отчества не требуется, можно заменить его символом -"

const val text_tooLongPatronymic = "ℹ  Превышена максимальная длина отчества. Для корректной работы приложения необходимо сократить количество символов в ФИО."

const val text_wrongProfession = "❌ Пожалуйста, выберите другое название специальности."

const val text_thanks = "✅ Спасибо за регистрацию!"

const val text_passwordOk = "✅ Код принят, спасибо!"

const val text_passwordApprove = "✅ Код был подтверждён, осталось заполнить ФИО и регистрация будет завершена. Введите, пожалуйста, фамилию клиента или ФИО полностью (например: Иванов Иван Иванович) и " +
        "отправьте сообщение в чат."

const val text_passwordClientApprove = "✅ Код был подтверждён, теперь перед предстоящим приёмом клиенту буду приходить сообщения с просьбой подтвердить посещение."

const val text_approveDelData = "❗ Пожалуйста, подтвердите удаление вашей учётной записи. После подтверждения все ваши данные будут удалены."

const val text_removeAppointment = "\uD83D\uDD30  Запись клиента была отменена, сообщение об отмене было отправлено клиенту."

const val text_removeClientAppointment = "\uD83D\uDD30  Запись клиента была отменена."

const val text_newClientAppointment = "\n\n\uD83D\uDD39 Клиент зарегистрирован через Telegram и получил сообщение с просьбой подтвердить предстоящий приём. Однако, если клиент был записан накануне даты приема и рассылка " +
        "сообщений для подтверждения визита уже произошла, сообщение клиент уже не получит и символ-индикатор клиента в главном меню останется \"❔\""

const val text_messageClientAppointment = "ℹ  Здравствуйте, у вас запланирован визит к специалисту: "

const val text_clientCanceled = "ℹ  Вы отменили запись у специалиста. Если запись была отменена случайно или вы изменили свое решение, свяжитесь со своим специалистом."

const val text_clientAccepted = "ℹ  Спасибо за подтверждение, если возникнет необходимость отменить предстоящий визит, сообщите об этом вашему специалисту."

const val text_inputProfession = "\uD83D\uDD30  Введите вашу специализацию (профессию) и отправьте сообщение в чат."

const val text_setName = "\uD83D\uDD30  Введите имя и отправьте сообщение в чат. Если ввод имени не требуется, можно заменить его символом -"

const val text_tooLongName = "ℹ  Превышена максимальная длина фамилии, или текст содержит лишний пробел. Попробуйте изменить введённые данные и пройти регистрацию заново."

const val text_nameCoincidePartOne = "ℹ  У вас уже добавлен клиент с ФИО "

const val text_nameCoincidePartTwo = ". Продолжить регистрацию нового клиента с совпадающими ФИО?"

const val text_tooLongSecondName = "ℹ  Превышена максимальная длинна фамилии, имени, или отчества. Для корректной работы приложения необходимо сократить количество символов в ФИО."

const val text_limitPartOne = "\uD83D\uDD30  Лимит добавления клиентов исчерпан. В период времени, когда абонемент не оплачен, специалист может зарегистрировать до "

const val text_limitPartTwo = " клиентов, с оплаченным абонементом лимит добавления увеличивается до "

const val text_clientStartMessage = "Здравствуйте, уважаемый пользователь! Здесь вы можете получать информацию о предстоящем визите к своему специалисту. Для этого, если вам был сообщён короткий код, " +
        "введите его и отправьте сообщение в чат."

const val text_info = "✷ Пожалуйста, ознакомьтесь с информацией в меню /help\n\n"

const val text_visitDuration = ", продолжительность приёма"

const val text_infoOne = "\uD83D\uDD30  Следующая запись: нет."

const val text_infoTwo = "\uD83D\uDD30  Следующая запись - "

const val text_todayAppointment = "\n\n\uD83D\uDD30  Запись на сегодня:"

const val text_adminMessage = "<Сообщение от администратора>\n"

const val text_sentMessage = "\uD83D\uDD30  Сообщение было отправлено пользователю."

const val text_userSettingsMenuTwo = " часов\n\uD83D\uDD38 Рассылка за: "

const val text_userSettingsMenuThree = " день/дня до приёма\n\uD83D\uDD38 Часовой пояс от Мск. часов: "

const val text_userSettingsMenuFour = "\n\uD83D\uDD38 Очередная абонентская плата: "

const val text_clientNotFound = "ℹ  Клиента с таким сочетанием символов в фамилии не найдено."

const val text_chooseClient = "\uD83D\uDD30 Выберите клиента/пациента из списка:"

const val text_cliAppointmentOne = "\uD83D\uDD38 Клиент уже записан на "

const val text_cliAppointmentTwo = ", если процесс записи будет продолжен, клиент будет перезаписан на новое время.\n\n\uD83D\uDD30 Выберите месяц для записи клиента/пациента:"

const val text_chooseMonth = "\uD83D\uDD30 Выберите месяц для записи клиента/пациента:"

const val text_clientRegistered = "\n\uD83D\uDD38 Клиент зарегистрирован в Telegram и получает сообщения о предстоящем приеме."

const val text_canGenPassword = "\n\uD83D\uDD38 Вы можете сгенерировать код для регистрации клиента, если у клиента есть Telegram."

const val text_forCliMenuOne = "\uD83D\uDD39  История посещений:"

const val text_forCliMenuTwo = "\n\n✷ В этом меню вы можете добавить текст-заметку в карточку клиента (заметка видна только вам), " +
        "удалить данные этого клиента, отменить запись, если у клиента запланирован визит к вам. Также в период " +
        "действия абонемента вы можете редактировать ФИО клиента.\n"

const val text_forCliMenuThree = "\n\uD83D\uDD38 Визит клиента запланирован:  "

const val text_appointmentDate = "ℹ  Записано клиентов по датам:\n"

const val text_chooseDate = "\n\n\uD83D\uDD30 Выберите дату для записи:"

const val text_appointmentTime = "ℹ  Запись по времени:\n"

const val text_chooseHour = "\n\n\uD83D\uDD30 Выберите час для записи:"

const val text_chooseMinute = "\uD83D\uDD30 Выберите минуты для записи:"

const val text_changeUserDataOne = "\uD83D\uDD30  Для изменения данных пользователя, введите разделяя символом # следующие данные, в порядке, представленном ниже: \nФамилия: "

const val text_changeUserDataTwo = "\nНовый chat id (опционально)\nЗатем отправьте сообщение в чат."

const val text_wrongText = "\uD83D\uDD30  Ошибка ввода данных"

const val text_userData = "\uD83D\uDD30  Новые данные пользователя: \nФамилия: "

const val text_setBackupOne = "\uD83D\uDD30  Добавлено элементов: "

const val text_setBackupTwo = "\nBackup установленный в сервер получен из директории:\n"

const val text_createBackupOne = "\uD83D\uDD30  Backup-файл данных <"

const val text_createBackupTwo = "> создан в директории:\n"

const val text_accountRepaired = "✅  Аккаунт восстановлен"

const val text_err = "❌  Ошибка"

const val text_setPass = "✅️Готово, установленный пароль: "

const val text_errPassOne = "❌  Недопустимая длинна пароля "

const val text_errPassTwo = "\nПароль не был установлен."

const val text_passwordAccepted = "✅  Пароль подтверждён, введите новый " +
        "пароль и отправьте сообщение в чат. Помните о том, что длинна пароля должна быть не менее 5 и не более 15 символов."

const val text_remarkAddOne = "\uD83D\uDCDD Заметки:\n"

const val text_remarkAddTwo = "\n\n\uD83D\uDD30  Заметка была добавлена."

const val text_remarkAddThree = "\n\nℹ  Достигнут максимальный размер записи, заметка не была добавлена."

const val text_yourAppointment = "ℹ  Ваша запись у специалиста:"

const val text_addClientOne = "\n\n\uD83D\uDD38 Сообщите этот код клиенту:  "

const val text_clientLimitOne = "\n\nЧтобы увеличить лимит до "

const val text_clientLimitTwo = ", вы можете внести абонентскую плату. В период действия абонемента можно добавлять новых клиентов вплоть до исчерпания ограничения в "

const val text_clientLimitThree = " записей."

const val text_clientLimitFour = "\uD83D\uDD30  Всего клиентов добавлено: "

const val text_clientLimitFive = "\uD83D\uDD38Лимит добавления составляет "

const val text_clientLimitSix = " клиентов, до исчерпания осталось: "

const val text_clientLimitSeven = " клиентов, сейчас лимит исчерпан."

const val text_clientLimitEight = "клиентов, сейчас лимит превышен."

const val text_subscriptionTime = "🔸Абонемент действует до: "

const val text_yourSchedule = "\uD83D\uDD30  Запись к вам:"

const val text_allAddedOne = "\uD83D\uDD30  Всего добавлено: "

const val text_allAddedTwo = "\nСписок фамилий клиентов/пациентов:"

const val text_addRemarkOne = "\uD83D\uDCDD Заметки:\n"

const val text_addRemarkTwo = "\n\n\uD83D\uDD30  Здесь вы можете добавить или удалить записи, связанные с клиентом. Эти записи доступны для просмотра только вам. " +
        "\n\uD83D\uDD39 Для добавления заметки ведите текст и отправьте сообщение в чат."

const val text_notAppointment = "\uD83D\uDD30  У вас нет записи к специалисту."

const val text_appointmentOne = "\uD83D\uDD30  Ваша запись к специалисту:"

const val text_appointmentTwo = "  у специалиста: "

const val text_remarkDeleted = "\uD83D\uDD30  Все заметки были удалены."

const val text_addPassword = "\uD83D\uDD30  Для пароля установлено ограничение длинны: не менее 5 и не более 15 символов. Введите пароль в поле ввода и отправьте сообщение в чат."

const val text_hasPassword = "\uD83D\uDD30  У вашей учётной записи уже имеется пароль. Чтобы его изменить, введите действующий пароль и отправьте сообщение в чат."

const val text_personalClientManager = "𝙥𝙚𝙧𝙨𝙤𝙣𝙖𝙡 𝙘𝙡𝙞𝙚𝙣𝙩 𝙢𝙖𝙣𝙖𝙜𝙚𝙧"

const val text_personalManager = "𝙋𝙚𝙧𝙨𝙤𝙣𝙖𝙡 𝙢𝙖𝙣𝙖𝙜𝙚𝙧"

const val text_receiptDescription = "В период действия абонемента будет доступен полный функционал приложения"

const val text_chooseTime = "🔰  Выберите количество месяцев, на которое продляется подписка для пользователя "

const val text_paymentOne = "‼️  Пользователь "

const val text_paymentTwo = " открыл платежное меню \nКод платежа: "

const val text_paymentThree = "Подписка для абонента "

const val text_paymentFour = " продлена. \nПредыдущая дата окончания абонемента: "

const val text_paymentFive = "\nНовая дата окончания абонемента: "

const val text_paymentTextOne = "\uD83D\uDD30  Оплата абонемента позволяет использовать полный функционал приложения в течение всего оплаченного срока. Стоимость подписки с минимальным сроком составляет "

const val text_paymentTextTwo = " рублей, срок действия подписки "

const val text_paymentTextThree = " дней. Оплачивая абонемент, вы получаете возможность редактировать данные уже добавленных клиентов и добавлять новых клиентов вплоть до ограничения в "

const val text_paymentTextFour = " записей. В период, когда действие абонемента истекает, действует ограничение на добавление новых клиентов в "

const val text_paymentTextFourAddition = " записей.\n*После оплаты абонемента может пройти некоторое время до момента продления подписки.\n\nДля продления абонемента кликните клавишу \"Меню оплаты\""

const val text_paymentTextFive = " записей. Оплата абонемента на следующий период может быть произведена не ранее чем за "

const val text_paymentTextSix = " дней до истечения уже действующего абонемента, при этом оставшиеся дни действующего абонемента суммируются со сроком действия нового."

const val text_canPay = "\n\n\uD83D\uDD39  Для того чтобы открыть меню оплаты, нажмите клавишу <Оплатить> и следуйте инструкциям платежной системы."

const val text_alreadyPayed = "\n\nℹ  У вас действующий абонемент."

const val text_paymentSuccess = "✅  Оплата произведена успешно, спасибо!"

const val text_paymentNotSuccess = "Оплата не была произведена.\ninfo: <successful payment: "

const val text_paymentWrong = "Ошибка проведения платежа."

const val text_subscriptionOne = "Для продления абонемента необходимо оплатить сумму в размере "

const val text_subscriptionTwo = " дней подписки (например, подписка на срок "

const val text_subscriptionThree = " ₽). \nОплата производится посредством перевода денежных средств на счет карты:\n\n\uD83D\uDCB3  "

const val text_subscriptionFour = "\n\nВ комментарии к переводу необходимо указать код платежа:\n⫸ "

const val text_backupText = "Сообщение содержит текстовый backup-файл со списком клиентов и расписанием. Рекомендуется периодически сохранять backup во избежание утраты данных.\nЧтобы сохранить список, " +
        "нажмите иконку загрузки. Нажатие клавиши  <OK>  удаляет сообщение."

const val text_subscriptionExpire = "Здравствуйте! Через 3 дня истекает срок действия вашего абонемента. Весь функционал приложения останется доступен, однако на добавление новых клиентов будет наложено " +
        "ограничение. Оплатить абонемент можно в меню \n<⚙  Моя учетная запись> в разделе <Абонемент>"

const val text_setSettings = "\uD83D\uDD30  Введите адрес директории файла (например: C:/Users/admit/OneDrive/Рабочий стол/settings.xml) с настройками и отправьте сообщение в чат. Адрес длинной менее 5 " +
        "символов будет проигнорирован и останется дефолтным (/home/dmitry/Documents/Personal_manager/settings.xml)"

const val text_forMainMenuMessage = "\uD83D\uDD30  Введите текст сообщения для главного меню. Текст будет отображаться в главном (стартовом) сообщении. " +
        "Текст длинной менее 3 символов удаляет уже отображающийся текст не устанавливая новый."

const val text_backupToChat = "\uD83D\uDD30  Опции Backup меню:\n\n\uD83D\uDD39 <Выгрузить backup в чат> - доступно только при наличии файлов в директории.\n" +
        "\uD83D\uDD39 <Сохранить user_backup/client_backup> - резервное копирование баз данных в выбранную директорию.\n\uD83D\uDD39 <Backup в user/client сервер> - загрузка резервной копии данных в выбранный " +
        "сервер.\n\uD83D\uDD39<❗ Удалить сервер> - удаляет все данные выбранного сервера."

const val text_commonHelpText = "\uD83D\uDD30  Программа предназначена для ведения клиентской/пациентской записи. Особенностью приложения является то, что не происходит прямого взаимодействия между пользователями, " +
        "от клиента не требуется ввода своих персональных данных, карточку клиента создаёт специалист и доступна она только ему самому. Приложение не предоставляет возможности для поиска " +
        "одним пользователям других пользователей, тем самым обеспечивая конфиденциальность."

const val text_addClientTwo = "\n\nКлиент должен зайти в Telegram, ввести в строку поиска Telegram: $text_personalClientManager. " +
        "Из списка программ выбрать $text_personalManager, зайти в бот, ввести трёхзначный код и отправить сообщение в чат. " +
        "Если клиент успешно введёт и отправит код, у вас появится меню регистрации нового клиента. Время существования кода ограничено, сброс происходит каждый час. Если до истечения этого времени клиент не " +
        "будет зарегистрирован, сгенерируйте новый код. Новый код не будет генерироваться, пока действителен предыдущий."

const val text_addNewClient = "\uD83D\uDD30  Если ваш клиент/пациент использует Telegram, вы можете сообщить ему имя бота, которое надо ввести в строку поиска Telegram: $text_personalClientManager. Из списка " +
        "предложенных программ выбрать $text_personalManager." +
        "\nЗатем нажмите клавишу <Генерировать код для клиента> и сообщите код с экрана клиенту. Клиент должен зайти в бот и отправить сообщение с кодом в чат. Вам останется только заполнить ФИО клиента " +
        "и клиент будет добавлен в вашу базу.\n\n\uD83D\uDD30  Также, можно сначала добавить клиента/пациента в базу без кода, и если клиент использует Telegram, отправить код позже из меню <Работа с базой " +
        "клиентов/пациентов>. " +
        "Для добавления клиента без генерации кода, нажмите клавишу <Добавить клиента без кода>."

const val text_userSettingsMenuOne = "\uD83D\uDD30  Меню с настройками.\nВ меню настроек вашей учетной записи вы можете:\n" +
        "✷ Установить время для рассылки сообщений, чтобы клиент мог подтвердить визит к вам. По умолчанию время рассылки 12.00 (Мск.)\n" +
        "✷ Установить количество дней, за которое будут отправлены сообщения для подтверждения визита. По умолчанию сообщения отправляются за 1 " +
        "день до приёма, возможный максимум - за 3 дня до приёма.\n✷ Если ваш часовой пояс не соответствует Мск., установите то количество часов, " +
        "на которое ваше время отличается от дефолтного (Мск.)\n✷ В разделе <Мои клиенты и лимиты> можно узнать, сколько клиентов у вас " +
        "добавлено в базу данных и сколько вы еще можете добавить.\n✷ В разделе <Мои данные> вы можете редактировать собственные данные, восстановить учётную запись " +
        "в приложении, если у вас изменился Telegram аккаунт, посмотреть собственную запись к специалисту.\n✷ Кликнув клавишу <Backup-файл>, вы получите документ в формате .txt с " +
        "полным списком ваших клиентов, их данными и датами записи. Периодическая выгрузка backup-файлов позволяет гарантировать " +
        "сохранность ваших данных\n✷ В случае возникновения проблем связанных " +
        "с работой приложения, вы можете обратиться в чат поддержки.\n\n\uD83D\uDD39 С помощью клавиш ➖ и ➕ вы можете менять параметры настроек времени." +
        "\n\n\uD83D\uDD38 Время рассылки в: "

const val text_specialistHelpText = "Как добавить клиента:\n1. Клавиша меню <Добавить нового клиента/пациента>, затем <Генерировать код для клиента>, сообщить сгенерированный код клиенту и далее следовать " +
        "сообщениям-подсказкам. Если клиент зарегистрирован с помощью кода через Telegram, он будет получать оповещение накануне визита к вам и должен будет подтвердить или отменить визит, при этом вы получите " +
        "оповещение с результатами рассылки. \n2. Клавиша меню <Добавить нового клиента/пациента>, затем <Добавить клиента без кода> и следовать подсказкам программы. Добавленному таким образом клиенту код регистрации " +
        "можно отправить позднее.\n3. С помощью быстрой команды в чат - примеры команд описаны ниже.\nДалее можно запланировать визит клиента к вам, сделать это можно с помощью клавиши меню <Записать на приём> или " +
        "отправить в чат быструю команду, в последнем случае можно использовать голосовой ввод - таким образом можно записать клиента на приём максимально быстро. Раздел меню <Работа с базой клиентов/пациентов>" +
        " содержит подразделы, позволяющие делать заметки, выписать клиента, удалить, отправить код уже добавленному в базу клиенту для регистрации через Telegram.\n\n\uD83D\uDD30  Индикация клиентов на экране " +
        "главного меню нужна для того, чтобы специалист видел, кто из клиентов подтвердил свой предстоящий визит. Тем клиентам, которые зарегистрированы в приложении через Telegram, " +
        "накануне приёма приходит сообщение для подтверждения или отмены визита.\n\nСимволы индикации клиентов:\n❔ - клиент должен подтвердить визит\n✔ - клиент подтвердил визит\n✖ - клиент отменил визит\n" +
        "？- клиент не зарегистрирован через Telegram и не получает сообщений.\n\n\uD83D\uDD30  Быстрые команды служат для того, чтобы добавить в базу клиента, работать с его данными, записать его на приём. " +
        "Для использования таких команд, надо с клавиатуры или с помощью голосового ввода (самый быстрый способ) написать сообщение и отправить его в чат.\n\nСообщения-быстрые команды, которые можно " +
        "отправить в чат:\n\uD83D\uDD39 Фамилия либо две первых буквы фамилии (не менее двух, например: ив, например: Иванов) - записать клиента на прием/посещение специалиста." +
        "\n\uD83D\uDD39 ФИО клиента (например: Иванов Иван Иванович) - добавить нового пациента в базу данных.\n\uD83D\uDD39 Фамилию - дату - месяц - час - минуты (например: Иванов 10 мая 15 30) - " +
        "записать клиента на указанные дату и время (без установленной продолжительности приема)."